name: E2E Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  pages: write
  checks: write
  id-token: write

jobs:
  e2e:
    runs-on: ubuntu-latest
    container:
      image: cypress/included:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Configure git safe directory
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
      - name: Cache npm (node_modules + npm cache)
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit --progress=false
      - name: Build project
        run: npm run build
      - name: Run E2E tests (with JUnit reporter)
        run: |
          mkdir -p test-results
          npx cypress run --e2e --browser chrome --reporter mocha-junit-reporter --reporter-options mochaFile=test-results/junit-[hash].xml
      - name: Upload Pages artifact (dist)
        if: success()
        uses: actions/upload-pages-artifact@v4
        with:
          path: dist
      - name: Upload Cypress screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-screenshots
          path: cypress/screenshots
      - name: Upload Cypress videos
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-videos
          path: cypress/videos
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results
      - name: Publish JUnit to GitHub Checks
        uses: dorny/test-reporter@v2
        if: ${{ !cancelled() }}       # run this step even if previous step failed
        with:
          name: Test reports
          path: test-results/*.xml
          reporter: java-junit

  publish:
    needs: e2e
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && needs.e2e.result == 'success'
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
